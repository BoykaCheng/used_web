<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cque.usedweb.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.cque.usedweb.entity.Person" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="modify" property="modify" jdbcType="TIMESTAMP" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="village" property="village" jdbcType="VARCHAR" />
    <result column="village_id" property="villageId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="hui_y" property="huiY" jdbcType="TINYINT" />
    <result column="locked" property="locked" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, modify, user_name, email, phone, real_name, village, village_id, address, gender, 
    create_time, avatar, hui_y, locked
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cque.usedweb.entity.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cque.usedweb.entity.PersonExample" >
    delete from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cque.usedweb.entity.Person" >
    insert into person (id, modify, user_name, 
      email, phone, real_name, 
      village, village_id, address, 
      gender, create_time, avatar, 
      hui_y, locked)
    values (#{id,jdbcType=INTEGER}, #{modify,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{village,jdbcType=VARCHAR}, #{villageId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{avatar,jdbcType=VARCHAR}, 
      #{huiY,jdbcType=TINYINT}, #{locked,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cque.usedweb.entity.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="modify != null" >
        modify,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="village != null" >
        village,
      </if>
      <if test="villageId != null" >
        village_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="huiY != null" >
        hui_y,
      </if>
      <if test="locked != null" >
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="modify != null" >
        #{modify,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="village != null" >
        #{village,jdbcType=VARCHAR},
      </if>
      <if test="villageId != null" >
        #{villageId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="huiY != null" >
        #{huiY,jdbcType=TINYINT},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cque.usedweb.entity.PersonExample" resultType="java.lang.Integer" >
    select count(*) from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update person
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.modify != null" >
        modify = #{record.modify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.village != null" >
        village = #{record.village,jdbcType=VARCHAR},
      </if>
      <if test="record.villageId != null" >
        village_id = #{record.villageId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.huiY != null" >
        hui_y = #{record.huiY,jdbcType=TINYINT},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update person
    set id = #{record.id,jdbcType=INTEGER},
      modify = #{record.modify,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      village = #{record.village,jdbcType=VARCHAR},
      village_id = #{record.villageId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      hui_y = #{record.huiY,jdbcType=TINYINT},
      locked = #{record.locked,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cque.usedweb.entity.Person" >
    update person
    <set >
      <if test="modify != null" >
        modify = #{modify,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="village != null" >
        village = #{village,jdbcType=VARCHAR},
      </if>
      <if test="villageId != null" >
        village_id = #{villageId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="huiY != null" >
        hui_y = #{huiY,jdbcType=TINYINT},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cque.usedweb.entity.Person" >
    update person
    set modify = #{modify,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR},
      village_id = #{villageId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      avatar = #{avatar,jdbcType=VARCHAR},
      hui_y = #{huiY,jdbcType=TINYINT},
      locked = #{locked,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from person
    where
    user_name = #{username}
  </select>
  <select id="selectAllMember" resultMap="BaseResultMap">
    select * from person
    where
    hui_y = 1
  </select>
</mapper>